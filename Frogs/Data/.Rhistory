main = "Observed Vs Expected heterozygosity per marker",  ## main title
xlab = "Ho",  ## x label
ylab = "Hs",  ## y label
col = "blue")  ## colour of points
text(SSR_loci_Ho,
SSR_loci_Hs,
names(SSR)[,c(2:11)],
pos = 2,  ## position of text relative to the point
offset = 0.2)  ##
text(SSR_loci_Ho,
SSR_loci_Hs,
names(SSR)[c(2:11)],
pos = 2,  ## position of text relative to the point
offset = 0.2)  ## distance from the point.
text(SSR_loci_Ho,
SSR_loci_Hs,
names(SSR)[c(2:11)],
pos = 4,  ## position of text relative to the point
offset = 0.2)  ## distance from the point.
plot(SSR_loci_Ho,
SSR_loci_Hs,
pch = 16,  ## point character to use
cex = 1, ## size of points
main = "Observed Vs Expected heterozygosity per marker",  ## main title
xlab = "Ho",  ## x label
ylab = "Hs",  ## y label
col = "blue")  ## colour of points
## Add text to the plot to show which population is which.
text(SSR_loci_Ho,
SSR_loci_Hs,
names(SSR)[c(2:11)],
pos = 3,  ## position of text relative to the point
offset = 0.2)  ## distance from the point.
abline(0,1)  ## plot a line with a 1 to 1 function.
Popnames<-read.table("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/pop.txt",header=F)
pops<-rep(Popnames[,2])[SSR[,1]]
country.pop=substr(Popnames[,2], 1, 2)
country.ind=substr(pops, 1, 2)
length(unique(country.pop))
country.colors=rainbow(7)[as.factor(country.pop)]
country.ind.colors=rainbow(7)[as.factor(country.ind)]
samples.ind.colors<-rainbow(19)[as.factor(pops)]
pcamsat<-indpca(SSR,ind.labels=pops)
plot(pcamsat,col=country.ind.colors,eigen=T)
plot(pcamsat,col=samples.ind.colors,eigen=T)
plot(pcamsat,col=country.ind.colors,eigen=F)
plot(pcamsat,col=country.ind.colors,eigen=F)
par(mfrow(1,1))
par(mfrow = c(1,1))
plot(pcamsat,col=country.ind.colors,eigen=F)
plot(pcamsat,col=samples.ind.colors,eigen=T)
plot(pcamsat,col=country.ind.colors,eigen=F)
plot(pcamsat,col=samples.ind.colors,eigen=F)
par(mfrow = c(1,1))
plot(pcamsat,col=samples.ind.colors,eigen=F)
geodist<-read.table("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/geodist.txt", header=F)
dist.geo<-as.dist(geodist,upper=F)
mantel.rtest(as.dist(SSR_ppfst), dist.geo,nrepet=9999)
vect.geo<-as.vector(dist.geo)
vect.fst.SSR<-as.vector(as.dist(SSR_ppfst))
plot(vect.geo,vect.fst.SSR,main="Microsatellites",xlab="Geographic distance (km)",ylab="Pairwise Fst Microsatellites",pch=16)
cor.test(vect.geo,vect.fst.SSR,method="pearson")
abline(lm(vect.fst.SSR~vect.geo),lwd=2,lty=2,col="blue")
boxplot(SSR_stats$Ho, boxfill="blue", xlab ="population", ylab = "Ho", main = "Per poplulation Ho for 10 microsatellites")
boxplot(SSR_stats$Hs, boxfill="blue", xlab ="population", ylab = "Hs", main = "Per poplulation Hs for 10 microsatellites")
boxplot((SSR_stats$Ho-SSR_stats$Hs), boxfill="blue", xlab ="population", ylab = "Hs", main = "Per poplulation Hs for 10 microsatellites")
abline(0,0)
SSR_stats$pop.freq
names(SSR)
names(SSR_stats)
SSR <- read.fstat.data("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/microsat_trimm.dat", na.s = "0")
SSR_stats <- basic.stats(SSR)  ## calculate basic stats
SSR_stats$pop.freq ## per locus and pop allele frequencies
boxplot(SSR_stats$Ho, boxfill="blue", xlab ="population", ylab = "Ho", main = "Per poplulation Ho for 10 microsatellites")
boxplot(SSR_stats$Hs, boxfill="blue", xlab ="population", ylab = "Hs", main = "Per poplulation Hs for 10 microsatellites")
boxplot((SSR_stats$Ho-SSR_stats$Hs), boxfill="blue", xlab ="population", ylab = "Hs", main = "Per poplulation Hs for 10 microsatellites")
abline(0,0)
per_pop_Hs <- colMeans(SSR_stats$Hs)  ## calculate Hs and Ho for populations by averaging across markers
per_pop_Ho <- colMeans(SSR_stats$Ho)
pops <- unique(SSR$Pop) ## get a list of the population names
plot(per_pop_Ho,
per_pop_Hs,
pch = 16,  ## point character to use
cex = 1, ## size of points
main = "Observed Vs Expected heterozygosity per population",  ## main title
xlab = "Ho",  ## x label
ylab = "Hs",  ## y label
col = "blue",
ylim = c(0.3,0.75))  ## colour of points
text(per_pop_Ho,
per_pop_Hs,
pops,
pos = 2,  ## position of text relative to the point
offset = 0.2)  ## distance from the point.
abline(0,1)  ## plot a line with a 1 to 1 function.
geodist<-read.table("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/geodist.txt", header=F)
dist.geo<-as.dist(geodist,upper=F)
mantel.rtest(as.dist(SSR_ppfst), dist.geo,nrepet=9999)
vect.geo<-as.vector(dist.geo)
vect.fst.SSR<-as.vector(as.dist(SSR_ppfst))
plot(vect.geo,vect.fst.SSR,main="Microsatellites",xlab="Geographic distance (km)",ylab="Pairwise Fst Microsatellites",pch=16)
SSR_ppfst<-pairwise.neifst(SSR)  ## returns a matrix of Fsts for each pairwise comparison.
vect.geo<-as.vector(dist.geo)
vect.fst.SSR<-as.vector(as.dist(SSR_ppfst))
plot(vect.geo,vect.fst.SSR,main="Microsatellites",xlab="Geographic distance (km)",ylab="Pairwise Fst Microsatellites",pch=16)
cor.test(vect.geo,vect.fst.SSR,method="pearson")
abline(lm(vect.fst.SSR~vect.geo),lwd=2,lty=2,col="blue")
head(SSR)
SSR <- read.fstat.data("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/microsat_trimm.dat", na.s = "NA")
head(SSR)
SSR <- read.fstat.data("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/microsat_trimm.dat", na.s = "0")
str(SSR)
boxplot((SSR_stats$Ho-SSR_stats$Hs), boxfill="blue", xlab ="population", ylab = "Hs", main = "Per poplulation Hs for 10 microsatellites")
abline(0,0)
per_pop_Hs <- colMeans(SSR_stats$Hs)  ## calculate Hs and Ho for populations by averaging across markers
per_pop_Ho <- colMeans(SSR_stats$Ho)
pops <- unique(SSR$Pop) ## get a list of the population names
?plot  ## get help for each function by typing "?" before the function name
plot(per_pop_Ho,
per_pop_Hs,
pch = 16,  ## point character to use
cex = 1, ## size of points
main = "Observed Vs Expected heterozygosity per population",  ## main title
xlab = "Ho",  ## x label
ylab = "Hs",  ## y label
col = "blue",
ylim = c(0.3,0.75))  ## colour of points
plot(per_pop_Ho,
per_pop_Hs,
pch = 16,  ## point character to use
cex = 1, ## size of points
main = "Observed Vs Expected heterozygosity per population",  ## main title
xlab = "Ho",  ## x label
ylab = "Hs",  ## y label
col = "blue")  ## colour of points
text(per_pop_Ho,
per_pop_Hs,
pops,
pos = 2,  ## position of text relative to the point
offset = 0.2)  ## distance from the point.
abline(0,1)  ## plot a line with a 1 to 1 function.
?text
?plot
SSR_loci_Ho <- rowMeans(SSR_stats$Ho)
SSR_loci_Hs <- rowMeans(SSR_stats$Hs)
plot(SSR_loci_Ho,
SSR_loci_Hs,
pch = 16,  ## point character to use
cex = 1, ## size of points
main = "Observed Vs Expected heterozygosity per marker",  ## main title
xlab = "Ho",  ## x label
ylab = "Hs",  ## y label
col = "blue")  ## colour of points
text(SSR_loci_Ho,
SSR_loci_Hs,
names(SSR)[c(2:11)],
pos = 3,  ## position of text relative to the point
offset = 0.2)  ## distance from the point.
abline(0,1)  ## plot a line with a 1 to 1 function.
boxplot(SSR_stats$Fis, boxfill="blue", xlab ="population", ylab = "Fis", main = "Per poplulation Fis for 10 microsatellites")
SSR_Fis <- colMeans(SSR_stats$Fis)
plot(SSR_loci_Ho,
SSR_loci_Hs,
pch = 16,  ## point character to use
cex = 1, ## size of points
main = "Observed Vs Expected heterozygosity per marker",  ## main title
xlab = "Ho",  ## x label
ylab = "Hs",  ## y label
col = "blue")  ## colour of points
## Add text to the plot to show which population is which.
text(SSR_loci_Ho,
SSR_loci_Hs,
names(SSR)[c(2:11)],
pos = 3,  ## position of text relative to the point
offset = 0.2)  ## distance from the point.
abline(0,1)  ## plot a line with a 1 to 1 function.
load("bats/ppfst.SNP") # the name of the object is ppfst.SNP
load("/ppfst.SNP") # the name of the object is ppfst.SNP
load("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/ppfst.SNP") # the name of the object is ppfst.SNP
mantel_SSR <- mantel.rtest(as.dist(SSR_ppfst), dist.geo,nrepet=9999)
vect.fst.SNP<-as.vector(as.dist(ppfst.SNP))
plot(vect.geo,vect.fst.SNP,main="SNPs",xlab="Geographic distance (km)",ylab="Pairwise Fst Microsatellites",pch=16)
cor.test(vect.geo,vect.fst.SNP,method="pearson")
abline(lm(vect.fst.SNP~vect.geo),lwd=2,lty=2,col="blue")
# now visualize IBD for SSR
plot(vect.geo,vect.fst.SSR,main="Microsatellites",xlab="Geographic distance (km)",ylab="Pairwise Fst Microsatellites",pch=16)
cor.test(vect.geo,vect.fst.SSR,method="pearson")
abline(lm(vect.fst.SSR~vect.geo),lwd=2,lty=2,col="blue")
# now visualize IBD for SSR
plot(vect.geo,vect.fst.SNP,main="SNPs",xlab="Geographic distance (km)",ylab="Pairwise Fst Microsatellites",pch=16)
cor.test(vect.geo,vect.fst.SNP,method="pearson")
abline(lm(vect.fst.SNP~vect.geo),lwd=2,lty=2,col="blue")
heatmap(SSR_ppfst)  ## nice visualisation
heatmap(SSR_ppfst, Colv = F, Rowv = F)  ## nice visualisation
?heatmap
heatmap(SSR_ppfst, Colv = NULL, Rowv = NULL)  ## nice visualisation
heatmap(SSR_ppfst)  ## nice visualisation
Popnames<-read.table("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/pop.txt",header=F)
Popnames
pops<-rep(Popnames[,2])[SSR[,1]]
pops
country.pop=substr(Popnames[,2], 1, 2)
country.ind=substr(pops, 1, 2)
country.pop
country.ind
length(unique(country.pop))
country.colors=rainbow(7)[as.factor(country.pop)]
country.ind.colors=rainbow(7)[as.factor(country.ind)]
samples.ind.colors<-rainbow(19)[as.factor(pops)]
par(mfrow = c(1,1))
pcamsat<-indpca(SSR,ind.labels=pops)
plot(pcamsat,col=country.ind.colors,eigen=F)
plot(pcamsat,col=samples.ind.colors,eigen=F)
pcaSNP<-indpca(SNP,ind.labels=pops)
SNP <- read.fstat.data("~/Dropbox/TPing/2018/MOLGEN_2018/MOLGEN2018_students/bats/RADfeb14.dat", na.s = "NA")
pcaSNP<-indpca(SNP,ind.labels=pops)
head(SNP)
plot(pcaSNP,col=country.ind.colors,eigen=F)
plot(pcaSNP,col=samples.ind.colors,eigen=F)
plot(pcamsat,col=country.ind.colors,eigen=F)
plot(pcamsat,col=samples.ind.colors,eigen=F)
plot(pcamsat,col=country.ind.colors,eigen=F)
plot(pcaSNP,col=country.ind.colors,eigen=T)
pcaSNP$ifreq
pcaSNP$ipca
head(pcaSNP$ipca$cw)
pcaSNP$ipca$cw
pcaSNP$ipca$c1
?indpca
?dudi.pca
pcaSNP$ipca
pcaSNP$ipca$l1
pchisq(149.177, 1, lower = F)
pchisq(149.771, 1, lower = F)
pchisq(149.7771, 1, lower = F)
genotypes <- data.frame("AA" = c(488, 369, 123), "AB" = c(214, 519, 189)
genotypes <- data.frame("AA" = c(488, 369, 123), "AB" = c(214, 519, 189))
genotypes <- data.frame("AA" = c(488, 369, 123), "AB" = c(214, 519, 189))
genotypes
genotypes <- data.frame("AA" = c(488, 369, 123), "AB" = c(214, 519, 189), "aa" = c(164, 222, 212), row.names = ("BB", "Bb", "bb"))  ))
genotypes <- data.frame("AA" = c(488, 369, 123), "AB" = c(214, 519, 189), "aa" = c(164, 222, 212), row.names = ("BB", "Bb", "bb"))  ))
genotypes <- data.frame("AA" = c(488, 369, 123), "AB" = c(214, 519, 189), "aa" = c(164, 222, 212), row.names = ("BB", "Bb", "bb"))
genotypes <- data.frame("AA" = c(488, 369, 123), "AB" = c(214, 519, 189), "aa" = c(164, 222, 212), row.names = c("BB", "Bb", "bb"))
genotypes
#r^2 et p_value en fonction des proportions de doubles heterozygotes
hetero <- function(genot){
#genot = tableau 3x3 de g??notypes ?? tester
pA <- (2*sum(genot[,1])+sum(genot[,2]))/(2*sum(genot))
pB <- (2*sum(genot[1,])+sum(genot[2,]))/(2*sum(genot))
het <- 0:genot[2,2] #heterozygotes AB/ab
x1<-numeric(length = length(het))
for(i in 1:length(het)){
x1[i] <- (2*genot[1,1]+genot[1,2]+genot[2,1]+het[i])/(2*sum(genot))
}
r2<-(x1-pA*pB)^2/(pA*pB*(1-pA)*(1-pB))
pval<- (pchisq(2*sum(genot)*r2,1,lower=F)) #p-values en log
par(mfrow=c(1,3))
plot(het/genot[2,2],r2,type="l",xlab="Proportion de AB/ab",ylab=expression(r^2))
plot(het/genot[2,2],-log10(pval),type="l",xlab="Proportion de AB/ab",ylab="P value (-log)"); abline(h=-log10(0.05), lty=2)
plot(het/genot[2,2],pval,type="l",xlab="Proportion de AB/ab",ylab="P value"); abline(h=(0.05), lty=2)
a <- which(pval > 0.05)
print(range(het[min(a):max(a)])); print(round(digits=3, range(het[min(a):max(a)]/genot[2,2])))
#donne la gamme de valeurs et proportions de AA/ab pour lesquels il n'y a pas de d??s??quilibre gam??tique significatif
}
hetero(genotypes)
D1 <- 0.088
#D en fonction du taux de r??combinaison
recomb <- function(d0, rec, gen){
# d0 = D (d??s??quilibre gam??tique) initiel
# rec = vecteur contenant les diff??rents niveaux de r??combinaison
# gen = nombre de g??n??rations ?? tester
g <- 1:gen
dat <- matrix(nrow = length(rec), ncol = gen) #matrix avec autant de lignes que de taux de r??combinaison ?? tester, et autant de colonnes que g??n??rations
dat[,1] <- d0    #toutes les lignes commencent avec D=d0
for(i in 1:length(rec)){
for(j in 2:gen){
dat[i,j] <- (1-rec[i])^g[j] * d0 #formule de la page 21
}
}
couleur <- terrain.colors(length(rec))
plot(1:gen,dat[1,], type = "l", ylim = c(0,d0), xlim = c(1,gen), xlab = "Generations", ylab = "D", col=couleur[1])
for(k in 2:length(rec)){
lines(1:gen,dat[k,], col=couleur[k], xlim = c(1,gen), lwd=2)
}
legend(x=(gen-20), d0, legend = rec, col = couleur, lty = 1, lwd=2)
}
recomb(D1, c(0.01, 0.025, 0.05, 0.1, 0.15, 0.2), 100)
par(mfrow = 1)
dev.off()
recomb(D1, c(0.01, 0.025, 0.05, 0.1, 0.15, 0.2), 100)
freqdep = function(p, a, gen) {
# p=fr??quence de A a=effets de la fr??quence sur la fitness gen=nombre de
# g??n??ration
res = numeric(gen)
res[1] = p
for (i in 2:gen) {
p = res[i - 1]
q = 1 - p #fr??quence q=1-p
fAA = p * p #fr??quence des AA
fAB = 2 * p * q #fr??quence des AB
fBB = q * q #fr??quence des BB
wAA = 1 + (1 - fAA - fAB) * a
# fitness des AA = 1 + a*(fr??quence des gauchers)
wAB = 1 + (1 - fAB - fAA) * a
# fitness des AB = 1 + a*(fr??quence des gauchers)
wBB = 1 + (1 - fBB) * a
# fitness des BB = 1 + a*(fr??quence des droitiers)
fAA = fAA * wAA #fr??quence des AA apr??s s??lection
fAB = fAB * wAB #fr??quence des AB apr??s s??lection
fBB = fBB * wBB #fr??quence des BB apr??s s??lection
wbarre = fAA + fAB + fBB
fAA = fAA/wbarre #normalisation
fAB = fAB/wbarre
fBB = fBB/wbarre
res[i] = fAA + fAB/2
# stocke la fr??quence p=fAA+fAB/2 ?? la g??n??ration 'i' dans le vecteur
}
my.main = paste("p0=", res[1], " w=", paste(a[1:3], collapse = ","))
plot(1:gen, res, type = "l", ylim = c(0, 1), xlab = "Generations", ylab = "freq de A")
}
freqdep(0.1, 0.001, 100)
freqdep(0.5, 0.001, 100)
0
freqdep(0.5, 0.001, 100)
freqdep(0.5, 0.001, 1)
freqdep(0.5, 0.001, 1000)
freqdep(0.5, 0.001, 10000)
freqdep(0.5, 0.0005, 10000)
freqdep(0.5, 0.01, 10000)
freqdep(0.5, 0.0005, 10000)
freqdep(0.9, 0.0005, 10000)
freqdep(0.9, 0.005, 10000)
freqdep(0.9, 0.006, 10000)
freqdep(0.9, 0.008, 10000)
library(adegenet)
library(pegas)
library(hierfstat)
## set working directory
setwd("~/Data/MolGen_2019/Frogs/Data/")
hyla_genpop <- read.genepop("batch_1_converted_genepop.gen")
hyla_genpop <- read.genepop("batch_1_converted_genepop.gen", ncode = 3)
popcodes <- read.csv("popmap_kept_largepops_codes.txt", sep = "\t", header = F)
hyla_genpop
pop(hyla_genpop)
popcodes <- read.csv("popmap_kept_largepops_codes.txt", sep = "\t", header = F)
hyla_genind <- read.genepop("batch_1_converted_genepop.gen", ncode = 3)
hyla_genind$tab[1:30,1:10]
pop(hyla_genind) <- popcodes$V2
## explore genind object
pop(hyla_genind)
indNames(hyla_genind)
hyla_summ_hier <- basic.stats(hyla_genind)
names(hyla_summ_hier)
hyla_summ_hier$n.ind.samp  ## per population and per locus genotype numbers
hyla_summ_hier$pop.freq  ## per populations and per locus allele frequencies
hyla_summ_hier$Ho  ## per population and per locus observed heterozygosity
hyla_summ_hier$Hs  ## per population and per locus expected heterozygosity
hyla_summ_hier$Fis  ## per pop and per locus Fis
hyla_summ_hier$perloc  ## per locus summary stats across all pops
hyla_summ_hier$perloc  ## per locus summary stats across all pops
hyla_summ_hier$overall  ## Overall stats for the whole dataset
plot(hyla_summ_hier$perloc$Ho, hyla_summ_hier$perloc$Hs)
abline(0,1)
plot(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T))
text(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T), levels(pop(hyla)), pos = 1)
abline(0,1)
text(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T), levels(pop(hyla_genind)), pos = 1)
ppfst.hyla_genind<-pairwise.neifst(hyla_genind)
ppfst.hyla_genind<-pairwise.neifst(hyla_genind$tab)
hyla_fstat <- read.fstat("batch_1_converted_hierfstat.dat")
hyla_fstat
hyla_fstat$Pop
hyla_fstat <- read.fstat.data("batch_1_converted_hierfstat.dat")
hyla_fstat
popcodes <- read.csv("popmap_kept_largepops_codes.txt", sep = "\t", header = F)
pop(hyla_fstat) <- popcodes$V2
hyla_fstat$Pop <- popcodes$V2
hyla_fstat$Pop
hyla_summ_hier <- basic.stats(hyla_fstat)
names(hyla_summ_hier)
plot(hyla_summ_hier$perloc$Ho, hyla_summ_hier$perloc$Hs)
abline(0,1)
plot(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T))
text(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T), levels(hyla_fstat$Pop), pos = 1)
ppfst.hyla_genind<-pairwise.neifst(hyla_fstat)
ppfst.hyla_genind
hyla_genind$tab[1:30,1:10]
popcodes <- read.csv("populations_numeric_codes.txt", sep = "\t", header = F)
hyla_fstat <- read.fstat.data("hyla_FSTAT.dat")
hyla_genind <- read.fstat.data("hyla_FSTAT.dat")
hyla_genind
popcodes <- read.csv("populations_numeric_codes.txt", sep = "\t", header = F)
hyla_genind$Pop <- popcodes$V2
## explore genind object
pop(hyla_genind)
indNames(hyla_genind)
hyla_summ_hier <- basic.stats(hyla_genind)
names(hyla_summ_hier)
hyla_summ_hier$n.ind.samp  ## per population and per locus genotype numbers
plot(hyla_summ_hier$perloc$Ho, hyla_summ_hier$perloc$Hs)
abline(0,1)
plot(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T))
text(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T), levels(hyla_fstat$Pop), pos = 1)
abline(0,1)
text(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T), levels(hyla_genind$Pop), pos = 1)
levels(hyla_genind$Pop)
hyla_genind$Pop
unique(hyla_genind$Pop)
text(colMeans(hyla_summ_hier$Ho, na.rm = T), colMeans(hyla_summ_hier$Hs, na.rm = T), unique(hyla_genind$Pop), pos = 1)
ppfst.hyla_genind<-pairwise.neifst(hyla_genind)
plot(hyla_summ_hier$perloc$Ho,
hyla_summ_hier$perloc$Hs,
xlab="Ho",
ylab="He",
main="Ho vs. He - Per locus")
abline(0,1)
plot(colMeans(hyla_summ_hier$Ho, na.rm = T),
colMeans(hyla_summ_hier$Hs, na.rm = T),
xlab="Ho",
ylab="He",
main="Ho vs. He - populations")
text(colMeans(hyla_summ_hier$Ho, na.rm = T),
colMeans(hyla_summ_hier$Hs, na.rm = T),
unique(hyla_genind$Pop),
pos = 1)
abline(0,1)
plot(hyla_summ_hier$perloc$Ho,
hyla_summ_hier$perloc$Hs,
pch = 16
xlab="Ho",
ylab="He",
main="Ho vs. He - Per locus")
abline(0,1)
plot(hyla_summ_hier$perloc$Ho,
hyla_summ_hier$perloc$Hs,
pch = 16,
xlab="Ho",
ylab="He",
main="Ho vs. He - Per locus")
abline(0,1)
plot(hyla_summ_hier$perloc$Ho,
hyla_summ_hier$perloc$Hs,
pch = 16,
cex = 0.5,
xlab="Ho",
ylab="He",
main="Ho vs. He - Per locus")
abline(0,1)
plot(colMeans(hyla_summ_hier$Ho, na.rm = T),
colMeans(hyla_summ_hier$Hs, na.rm = T),
xlab="Ho",
ylab="He",
main="Ho vs. He - populations")
plot(colMeans(hyla_summ_hier$Ho, na.rm = T),
colMeans(hyla_summ_hier$Hs, na.rm = T),
pch = 16,
cex = 0.75,
xlab="Ho",
ylab="He",
main="Ho vs. He - populations")
text(colMeans(hyla_summ_hier$Ho, na.rm = T),
colMeans(hyla_summ_hier$Hs, na.rm = T),
unique(hyla_genind$Pop),
pos = 1)
abline(0,1)
data("nancycats")
nancycats$other$xy
hyla_genpop <- genind2genpop(hyla_genind)
hyla_genind_adegenet <- adegenet::read.fstat("hyla_FSTAT.dat")
hyla_genind_adegenet
hyla_genpop <- genind2genpop(hyla_genind_adegenet)
pop(hyla_genind_adegenet) <- popcodes$V2
hyla_genpop <- genind2genpop(hyla_genind_adegenet)
Dgen <- dist.genpop(hyla_genpop, method = 2)
Hyla_lat_long <- read.csv("Hyla_coordinates.tsv", sep = "\t")
Hyla_lat_long
Dgeo <- dist(Hyla_lat_long)
Dgeo
ibd <- mantel.randtest(Dgen, Dgeo)
ibd
plot(ibd)
plot(Dgeo, Dgen)
libary(MASS)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
libary(MASS)
library(MASS)
abline(lm(Dgeo~Dgen))
abline(lm(Dgen~Dgeo))
plot(pcaSNP) #, col=popcols,eigen=F)
pcaSNP<-indpca(hyla_genind,ind.labels=pop(hyla_genind))
library(adegenet)
library(pegas)
library(hierfstat)
hyla_genind <- read.fstat.data("hyla_FSTAT.dat")
popcodes <- read.csv("populations_numeric_codes.txt", sep = "\t", header = F)
hyla_genind$Pop <- popcodes$V2
pcaSNP<-indpca(hyla_genind,ind.labels=pop(hyla_genind))
plot(pcaSNP) #, col=popcols,eigen=F)
pcaSNP<-indpca(hyla_genind,ind.labels=hyla_genind$Pop)
plot(pcaSNP) #, col=popcols,eigen=F)
popcols = rainbow(12)
plot(pcaSNP, col=popcols,eigen=F)
popcols = rainbow(11)
plot(pcaSNP, col=popcols,eigen=F)
popcols = rep(rainbow(12))[microsat$Pop]
popcols = rep(rainbow(12))[hyla_genind$Pop]
plot(pcaSNP, col=popcols,eigen=F)
plot(pcaSNP, col=popcols,eigen=F, pch = 16)
